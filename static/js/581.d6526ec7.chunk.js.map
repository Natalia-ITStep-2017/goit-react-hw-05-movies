{"version":3,"file":"static/js/581.d6526ec7.chunk.js","mappings":"6OAEaA,EAAe,mCAAG,WAAOC,GAAP,uFAENC,EAAAA,EAAAA,IAAA,6CAAgDD,EAAhD,YAAmE,CACxFE,QAAS,CAAE,cAAiB,gOAHD,cAEvBC,EAFuB,yBAKtBA,EAASC,MALa,2CAAH,sD,2CCD5B,EAA8B,6BAA9B,EAAuE,2B,SCuBvEC,IAAAA,UAAsB,CACpBC,QAASD,IAAAA,MAAgB,CACvBE,KAAMF,IAAAA,OAAAA,WACNG,aAAcH,IAAAA,OAAAA,WACdI,UAAWJ,IAAAA,OAAAA,WACXK,GAAIL,IAAAA,OAAAA,aACHM,YAGL,MA7BoB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACE,eAAIC,UAAWC,EAAf,SACGF,EAAQG,KAAI,gBAAGR,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAcC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,GAAlC,OACX,0BACGF,GACC,gBAAKQ,IAAG,0CAAqCR,GAC3CS,IAAKV,EACLW,MAAM,MAAMC,OAAO,SAErB,SAAC,IAAD,KAEF,cAAGN,UAAWC,EAAd,SAA8BP,KAC9B,uCAAeE,OATRC,EADE,KAelB,ECaD,EA7BgB,WACd,IAAQV,GAAYoB,EAAAA,EAAAA,MAAZpB,QAER,GAA8BqB,EAAAA,EAAAA,UAAS,MAAvC,eAAOT,EAAP,KAAgBU,EAAhB,KACA,GAAkDD,EAAAA,EAAAA,WAAS,GAA3D,eAAOE,EAAP,KAA0BC,EAA1B,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAKF,EAAmB,CAAC,IACRG,EADO,mCACtB,WAAoCC,GAApC,gGAE2B5B,EAAgB4B,GAF3C,OAEUxB,EAFV,OAGImB,GAAW,OAAInB,EAASyB,OACxBJ,GAAqB,GAJzB,gDAMIK,QAAQC,IAAR,MANJ,yDADsB,sDAUtBJ,EAAqB1B,EACtB,CACF,GAAE,CAACY,EAASW,EAAmBvB,KAG9B,gCACGY,IAAW,SAAC,EAAD,CAAaA,QAASA,IACjCA,GAA8B,IAAnBA,EAAQmB,SAAgB,gDAGzC,C,mGChCD,EAAuD,2CAAvD,EAA+G,4C,SCGlGC,EAAY,WACvB,OACE,0BACE,SAAC,cAAD,CAAsBC,MAAO,CAAEC,KAAM,OAAQC,MAAO,QAApD,UACE,gBAAKtB,UAAWC,EAAhB,UACE,SAAC,MAAD,SAKT,EAEYsB,EAAa,WACxB,OACE,0BACE,SAAC,cAAD,CAAsBH,MAAO,CAAEC,KAAM,MAAOC,MAAO,QAAnD,UACE,gBAAKtB,UAAWC,EAAhB,UACE,SAAC,MAAD,SAKT,C","sources":["api/getMovieCredits.js","webpack://react-homework-template/./src/components/credits/credits.module.css?f2b8","components/credits/creditsList.js","components/credits/credits.js","webpack://react-homework-template/./src/components/icons/icons.module.css?30c6","components/icons/icons.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const getMovieCredits = async (movieId) => {\n\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits`, {\n    headers: { 'Authorization': \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyZDk4NjcxMTNlZTg0MDg0Y2ZjNjU2ODVmMzIwNmMwYyIsInN1YiI6IjY0N2Y4MzY2Mzg1MjAyMDBhZjE0ZTgyZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.VNCNKNuK7_TGGjg30gNSY2nOQUtJtqUaOBiIeuk9KhE\" },\n  });\n  return response.data\n}","// extracted by mini-css-extract-plugin\nexport default {\"creditsList\":\"credits_creditsList__nnnid\",\"actorName\":\"credits_actorName__CZ+LP\"};","import PropTypes from \"prop-types\";\nimport { CreditIcon } from '../icons/icons';\nimport css from './credits.module.css';\n\nconst CreditsList = ({ credits }) => {\n  return (\n    <ul className={css.creditsList}>\n      {credits.map(({ name, profile_path, character, id }) => (\n        <li key={id}>\n          {profile_path ? (\n            <img src={`https://image.tmdb.org/t/p/w200/${profile_path}`}\n              alt={name}\n              width=\"200\" height=\"300\" />\n          ) : (\n            <CreditIcon />\n          )}\n          <p className={css.actorName}>{name}</p>\n          <p>Character: {character}</p>\n        </li >)\n      )}\n    </ul >\n  );\n};\n\nPropTypes.propTypes = {\n  reviews: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    profile_path: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  }).isRequired\n};\n\nexport default CreditsList\n\n\n\n","import { getMovieCredits } from \"api/getMovieCredits\"\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport CreditsList from \"./creditsList\";\n\n\nconst Credits = () => {\n  const { movieId } = useParams();\n\n  const [credits, setCredits] = useState(null);\n  const [isCreditsRendered, setIsCreditsRendered] = useState(false);\n\n  useEffect(() => {\n    if (!isCreditsRendered) {\n      async function fetchGetMovieCredits(Id) {\n        try {\n          const response = await getMovieCredits(Id);\n          setCredits([...response.cast]);\n          setIsCreditsRendered(true)\n        } catch (error) {\n          console.log(error);\n        }\n      }\n      fetchGetMovieCredits(movieId);\n    }\n  }, [credits, isCreditsRendered, movieId]);\n\n  return (\n    <>\n      {credits && <CreditsList credits={credits} />}\n      {credits && credits.length === 0 && <h3>There are no data</h3>}\n    </>\n  );\n};\n\nexport default Credits;","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"icons_icon__3uHpx\",\"movieIcon\":\"icons_movieIcon__ad92p icons_icon__3uHpx\",\"creditIcon\":\"icons_creditIcon__fh-AN icons_icon__3uHpx\"};","import { IconContext } from \"react-icons\";\nimport { BsCameraReelsFill, BsPersonSquare } from 'react-icons/bs';\nimport css from './icons.module.css';\n\nexport const MovieIcon = () => {\n  return (\n    <div>\n      <IconContext.Provider value={{ size: \"10em\", color: \"grey\" }} >\n        <div className={css.movieIcon}>\n          <BsCameraReelsFill />\n        </div>\n      </IconContext.Provider >\n    </div>\n  )\n}\n\nexport const CreditIcon = () => {\n  return (\n    <div>\n      <IconContext.Provider value={{ size: \"8em\", color: \"grey\" }} >\n        <div className={css.creditIcon}>\n          <BsPersonSquare />\n        </div>\n      </IconContext.Provider >\n    </div>\n  )\n}\n\n"],"names":["getMovieCredits","movieId","axios","headers","response","data","PropTypes","reviews","name","profile_path","character","id","isRequired","credits","className","css","map","src","alt","width","height","useParams","useState","setCredits","isCreditsRendered","setIsCreditsRendered","useEffect","fetchGetMovieCredits","Id","cast","console","log","length","MovieIcon","value","size","color","CreditIcon"],"sourceRoot":""}